/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RecruitmentStage as PrismaRecruitmentStage,
} from "@prisma/client";

export class RecruitmentStageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RecruitmentStageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.recruitmentStage.count(args);
  }

  async recruitmentStages(
    args: Prisma.RecruitmentStageFindManyArgs
  ): Promise<PrismaRecruitmentStage[]> {
    return this.prisma.recruitmentStage.findMany(args);
  }
  async recruitmentStage(
    args: Prisma.RecruitmentStageFindUniqueArgs
  ): Promise<PrismaRecruitmentStage | null> {
    return this.prisma.recruitmentStage.findUnique(args);
  }
  async createRecruitmentStage(
    args: Prisma.RecruitmentStageCreateArgs
  ): Promise<PrismaRecruitmentStage> {
    return this.prisma.recruitmentStage.create(args);
  }
  async updateRecruitmentStage(
    args: Prisma.RecruitmentStageUpdateArgs
  ): Promise<PrismaRecruitmentStage> {
    return this.prisma.recruitmentStage.update(args);
  }
  async deleteRecruitmentStage(
    args: Prisma.RecruitmentStageDeleteArgs
  ): Promise<PrismaRecruitmentStage> {
    return this.prisma.recruitmentStage.delete(args);
  }
}
